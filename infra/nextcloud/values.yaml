ingress:
  enabled: true
  className: nginx
  annotations:
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-headers: "X-Forwarded-For"
    nginx.ingress.kubernetes.io/server-snippet: |-
      server_tokens off;
      proxy_hide_header X-Powered-By;
      rewrite ^/.well-known/webfinger /index.php/.well-known/webfinger last;
      rewrite ^/.well-known/nodeinfo /index.php/.well-known/nodeinfo last;
      rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
      rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json;
      location = /.well-known/carddav {
        return 301 $scheme://$host/remote.php/dav;
      }
      location = /.well-known/caldav {
        return 301 $scheme://$host/remote.php/dav;
      }
      location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
      }
      location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
        deny all;
      }
      location ~ ^/(?:autotest|occ|issue|indie|db_|console) {
        deny all;
      }

tolerations:
  - key: "location"
    operator: "Equal"
    value: "external"
    effect: "NoSchedule"

nextcloud:
  host: nextcloud.k.joshuachp.dev
  existingSecret:
    enabled: true
    secretName: nextcloud-secret
  mail:
    enabled: true
    # the user we send email as
    fromAddress: Nextcloud <noreplay@k.joshuachp.dev>
  configs:
    cron.config.php: |
      <?php
      $CONFIG = array (
        'maintenance_window_start' => 1,
      );
    proxy.config.php: |-
      <?php
      $CONFIG = array (
        'trusted_proxies' => array(
          0 => '127.0.0.1',
          1 => '10.0.0.0/8',
        ),
        'forwarded_for_headers' => array('HTTP_X_FORWARDED_FOR'),
      );

internalDatabase:
  enabled: false

persistence:
  enabled: true
  storageClass: local-path
  existingClaim: nextcloud-pvc
  nextcloudData:
    enabled: true
    existingClaim: nextcloud-data-pvc

redis:
  enabled: true
  architecture: standalone
  global:
    storageClass: local-path
  auth:
    enabled: false
  networkPolicy:
    enabled: true
  master:
    resourcesPreset: nano
    persistence:
      existingClaim: nextcloud-redis-pvc
    tolerations:
      - key: "location"
        operator: "Equal"
        value: "external"
        effect: "NoSchedule"

cronjob:
  enabled: true

externalDatabase:
  enabled: true
  type: postgresql
  existingSecret:
    enabled: true
    secretName: nextcloud-secret
    hostKey: db-host
    databaseKey: db-name
    usernameKey: db-username
    passwordKey: db-password

postgresql:
  enabled: true
  architecture: standalone
  global:
    storageClass: local-path
  auth:
    database: nextcloud
    username: nextcloud
    existingSecret: nextcloud-postgres
  primary:
    resourcesPreset: nano
    tolerations:
      - key: "location"
        operator: "Equal"
        value: "external"
        effect: "NoSchedule"
    persistence:
      enabled: true
      existingClaim: nextcloud-postgres-pvc
